/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.nio.file.Paths;
import  static  linter.App.*;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test void mapTest(){
        App test = new App();
        int [][] arr = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        assertNotNull(test.map(arr));
    }

    @Test void testTally(){
        App test = new App();
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        String winner = test.tally(votes);
        String result = "Bush";
        assertEquals(result,test.tally(votes));
    }


    @Test void  testNoError(){
        String noErrors = "";
        Path testNoError = Paths.get("./src/test/resources/testNoError.js");
        assertEquals(noErrors, Linter(testNoError));
    }

    @Test void  testOneError(){
        String oneError = "Line3Missing semicolon";
        Path oneErrorFile = Paths.get("./src/test/resources/oneErrorFile.js");
        assertEquals(oneError, Linter(oneErrorFile));
    }

    @Test void  testFewError(){
        String fewErrors = "";
        Path fewErrorsFile = Paths.get("./src/test/resources/fewErrorsFile.js");
        assertEquals(fewErrors, Linter(fewErrorsFile));
    }

    @Test void  testManyError(){
        String manyErrors = "Line4Missing semicolon" + "Line5Missing semicolon" + "Line7Missing semicolon" +
        "Line12Missing semicolon" + "Line13Missing semicolon" ;

        Path manyErrorsFile = Paths.get("./src/test/resources/manyErrorsFile.js");
        assertEquals(manyErrors, Linter(manyErrorsFile));
    }

    @Test void  testEmptyError(){
        String empty = "";
        Path emptyFile = Paths.get("./src/test/resources/emptyFile.js");
        assertEquals(empty, Linter(emptyFile));
    }


}
